import{_ as s,c as a,o as i,a3 as t}from"./chunks/framework.BM2i9-bh.js";const E=JSON.parse('{"title":"数组去重","description":"","frontmatter":{},"headers":[],"relativePath":"src/知识库/算法/index3.md","filePath":"src/知识库/算法/index3.md"}'),e={name:"src/知识库/算法/index3.md"},n=t(`<h1 id="数组去重" tabindex="-1">数组去重 <a class="header-anchor" href="#数组去重" aria-label="Permalink to &quot;数组去重&quot;">​</a></h1><h2 id="利用set-array-from" tabindex="-1">利用Set()+Array.from() <a class="header-anchor" href="#利用set-array-from" aria-label="Permalink to &quot;利用Set()+Array.from()&quot;">​</a></h2><ul><li>Set对象：是值的集合，你可以按照插入的顺序迭代它的元素。 Set中的元素只会出现一次，即Set中的元素是唯一的。</li><li>Array.from() 方法：对一个类似数组或可迭代对象创建一个新的，浅拷贝的数组实例。</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Array.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [ 1, 2, &#39;abc&#39;, true, false, undefined, NaN ]</span></span></code></pre></div>`,4),r=[n];function l(h,p,o,d,k,c){return i(),a("div",null,r)}const g=s(e,[["render",l]]);export{E as __pageData,g as default};
