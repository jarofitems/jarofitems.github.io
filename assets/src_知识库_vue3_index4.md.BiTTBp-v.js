import{_ as e,c as t,o as r,a3 as o}from"./chunks/framework.BM2i9-bh.js";const f=JSON.parse('{"title":"Vue3带来了哪些新的特性和性能方面的提升","description":"","frontmatter":{},"headers":[],"relativePath":"src/知识库/vue3/index4.md","filePath":"src/知识库/vue3/index4.md"}'),n={name:"src/知识库/vue3/index4.md"},i=o('<h1 id="vue3带来了哪些新的特性和性能方面的提升" tabindex="-1">Vue3带来了哪些新的特性和性能方面的提升 <a class="header-anchor" href="#vue3带来了哪些新的特性和性能方面的提升" aria-label="Permalink to &quot;Vue3带来了哪些新的特性和性能方面的提升&quot;">​</a></h1><ul><li><strong>引入了 Composition API（组合式 API）</strong>。允许开发者更灵活地组织和重用组件逻辑。它使用函数而不是选项对象来组织组件的代码，使得代码更具可读性和维护性。</li><li><strong>多根组件</strong>。可以直接在 template 中使用多个根级别的元素，而不需要额外的包装元素。这样更方便地组织组件的结构。</li><li><strong>引入了 Teleport（传送）</strong>。可以将组件的内容渲染到指定 DOM 节点的新特性。一般用于创建全局弹窗和对话框等组件。</li><li><strong>响应式系统升级</strong>。从 defineProperty 升级到 ES2015 原生的 Proxy，不需要初始化遍历所有属性，就可以监听新增和删除的属性。</li><li><strong>编译优化</strong>。重写了虚拟 DOM，提升了渲染速度。diff 时静态节点会被直接跳过。</li><li><strong>源码体积优化</strong>。移除了一些非必要的特性，如 filter，一些新增的模块也将会被按需引入，减小了打包体积。</li><li><strong>打包优化</strong>。更强的 Tree Shaking，可以过滤不使用的模块，没有使用到的组件，比如过渡（transition）组件，则打包时不会包含它。</li></ul>',2),s=[i];function a(l,_,c,d,u,g){return r(),t("div",null,s)}const h=e(n,[["render",a]]);export{f as __pageData,h as default};
