import{_ as a,c as e,o as t,a3 as i}from"./chunks/framework.BM2i9-bh.js";const m=JSON.parse('{"title":"同源策略和跨域","description":"","frontmatter":{},"headers":[],"relativePath":"src/知识库/JS/index8.md","filePath":"src/知识库/JS/index8.md"}'),r={name:"src/知识库/JS/index8.md"},o=i('<h1 id="同源策略和跨域" tabindex="-1">同源策略和跨域 <a class="header-anchor" href="#同源策略和跨域" aria-label="Permalink to &quot;同源策略和跨域&quot;">​</a></h1><h2 id="什么是同源策略" tabindex="-1">什么是同源策略 <a class="header-anchor" href="#什么是同源策略" aria-label="Permalink to &quot;什么是同源策略&quot;">​</a></h2><p>同源指的是：协议、端口号、域名必须一致</p><h2 id="跨域" tabindex="-1">跨域 <a class="header-anchor" href="#跨域" aria-label="Permalink to &quot;跨域&quot;">​</a></h2><p>当协议、域名、端口有任何一个不同，都被当作是不同的域，这就是所谓“跨域”</p><h2 id="跨域解决方案" tabindex="-1">跨域解决方案 <a class="header-anchor" href="#跨域解决方案" aria-label="Permalink to &quot;跨域解决方案&quot;">​</a></h2><ul><li>CORS：服务器开启跨域资源共享</li><li>JSONP：利用<code>&lt;script&gt;</code>标签不存在跨域限制，只支持GET请求，且不安全。</li><li>nginx代理跨域</li><li>nodejs 中间件代理跨域，通过node开启一个代理服务器。</li></ul>',7),n=[o];function l(s,c,d,_,h,p){return t(),e("div",null,n)}const f=a(r,[["render",l]]);export{m as __pageData,f as default};
