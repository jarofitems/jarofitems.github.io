import{_ as t,c as a,o as r,l as e,a as s}from"./chunks/framework.BM2i9-bh.js";const m=JSON.parse('{"title":"vue响应式原理","description":"","frontmatter":{},"headers":[],"relativePath":"src/知识库/vue2/index12.md","filePath":"src/知识库/vue2/index12.md"}'),c={name:"src/知识库/vue2/index12.md"},n=e("h1",{id:"vue响应式原理",tabindex:"-1"},[s("vue响应式原理 "),e("a",{class:"header-anchor",href:"#vue响应式原理","aria-label":'Permalink to "vue响应式原理"'},"​")],-1),o=e("p",null,"采用数据劫持结合发布者-订阅者模式的方式，data数据在初始化的时候，会实例化一个Observe类，在它会将data数据进行递归遍历，并通过Object.defineProperty(滴坏的 破 婆儿 立)方法，给每个值添加上一个getter和一个setter。在数据读取的时候会触发getter进行依赖（Watcher(喔 乞儿)）收集，当数据改变时，会触发setter，对刚刚收集的依赖进行触发，并且更新watcher(喔 乞儿)通知视图进行渲染",-1),d=[n,o];function i(_,l,u,h,p,v){return r(),a("div",null,d)}const x=t(c,[["render",i]]);export{m as __pageData,x as default};
